from django.db import models
from django.contrib.auth.models import User
import uuid

class Agent(models.Model):
    user = models.OneToOneField(User, on_delete=models.CASCADE)
    company = models.CharField(max_length=100)

    def __str__(self):
        return self.user.email


class Subtype(models.Model):
    name = models.CharField(max_length=254, blank=False, null=False)
    sunday = models.IntegerField(default=0)
    monday = models.IntegerField(default=0)
    tuesday = models.IntegerField(default=0)
    wednesday = models.IntegerField(default=0)
    thursday = models.IntegerField(default=0)
    friday = models.IntegerField(default=0)
    saturday = models.IntegerField(default=0)
    total_hours_of_operation = models.IntegerField(default=0)

    def __str__(self):
        return self.name


class Sale(models.Model):
    uid = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)
    date_created = models.DateTimeField(auto_now_add=True)
    renewal = models.BooleanField(default=False)
    customer_name = models.CharField(max_length=255,blank=True,null=True)
    customer_authorized_representative = models.CharField(max_length=255,blank=True,null=True)
    service_address = models.CharField(max_length=255,blank=True,null=True)
    service_city = models.CharField(max_length=255,blank=True,null=True)
    service_state = models.CharField(max_length=255,blank=True,null=True)
    service_zip_code = models.CharField(max_length=255,blank=True,null=True)
    customer_subtype = models.CharField(max_length=255,blank=True,null=True)
    # customer_phone_number = models.CharField(max_length=255,blank=True,null=True)
    # billing_address = models.CharField(max_length=255,blank=True,null=True)
    # billing_city = models.CharField(max_length=255,blank=True,null=True)
    # billing_state = models.CharField(max_length=255,blank=True,null=True)
    # billing_zip_code = models.CharField(max_length=255,blank=True,null=True)
    # customer_email_address = models.CharField(max_length=255,blank=True,null=True)
    # times_bulbs_changed_yearly = models.CharField(max_length=255,blank=True,null=True)
    # annual_hours_of_operation = models.CharField(max_length=255,blank=True,null=True)
    # utility = models.CharField(max_length=255,blank=True,null=True)
    # service_class = models.CharField(max_length=255,blank=True,null=True)
    # utility_account_number = models.CharField(max_length=255,blank=True,null=True)
    # month_of_bill_used = models.CharField(max_length=255,blank=True,null=True)
    # yearly_kwh = models.CharField(max_length=255,blank=True,null=True)
    # monthly_kwh = models.CharField(max_length=255,blank=True,null=True)
    # supply_charges = models.CharField(max_length=255,blank=True,null=True)
    # delivery_charges = models.CharField(max_length=255,blank=True,null=True)
    # average_rate_of_supply = models.CharField(max_length=255,blank=True,null=True)
    # average_rate_of_delivery = models.CharField(max_length=255,blank=True,null=True)
    # estimated_annual_usage = models.CharField(max_length=255,blank=True,null=True)
    # estimated_annual_supply_charges = models.CharField(max_length=255,blank=True,null=True)
    # estimated_annual_delivery_charges = models.CharField(max_length=255,blank=True,null=True)
    # conventional_bulb_count = models.CharField(max_length=255,blank=True,null=True)
    # led_bulb_count = models.CharField(max_length=255,blank=True,null=True)
    # delamping_count = models.CharField(max_length=255,blank=True,null=True)
    # not_replacing_count = models.CharField(max_length=255,blank=True,null=True)
    # annual_bulb_maintenance = models.CharField(max_length=255,blank=True,null=True)
    # annual_consumption_reduction = models.CharField(max_length=255,blank=True,null=True)
    # projected_annual_usage = models.CharField(max_length=255,blank=True,null=True)
    # new_supply_rate = models.CharField(max_length=255,blank=True,null=True)
    # two_year_supply_savings = models.CharField(max_length=255,blank=True,null=True)
    # two_year_delivery_savings = models.CharField(max_length=255,blank=True,null=True)
    # two_year_maintenace_savings = models.CharField(max_length=255,blank=True,null=True)
    # total_two_year_savings = models.CharField(max_length=255,blank=True,null=True)
    # early_termination_fee = models.CharField(max_length=255,blank=True,null=True)
    # retail_energy_provider = models.CharField(max_length=255,blank=True,null=True)
    # agent_id = models.CharField(max_length=255,blank=True,null=True)
    # agent_name = models.CharField(max_length=255,blank=True,null=True)
    # old_sale_id = models.CharField(max_length=255,blank=True,null=True)
    # date_sale_started = models.CharField(max_length=255,blank=True,null=True)
    # date_sale_completed = models.CharField(max_length=255,blank=True,null=True)
    # customer_interest_level = models.CharField(max_length=255,blank=True,null=True)
    # customer_sub_type = models.CharField(max_length=255,blank=True,null=True)
    # weight = models.CharField(max_length=255,blank=True,null=True)
    # min_monthly_payment = models.CharField(max_length=255,blank=True,null=True)
    # led_adder = models.CharField(max_length=255,blank=True,null=True)
    # marketing_adder = models.CharField(max_length=255,blank=True,null=True)
    # logistics_adder = models.CharField(max_length=255,blank=True,null=True)
    # ee_adder = models.CharField(max_length=255,blank=True,null=True)
    # base_rate = models.CharField(max_length=255,blank=True,null=True)
    # tax_rate = models.CharField(max_length=255,blank=True,null=True)
    # customer_zone = models.CharField(max_length=255,blank=True,null=True)
    # ceiling_height = models.CharField(max_length=255,blank=True,null=True)
    # total_installation_cost = models.CharField(max_length=255,blank=True,null=True)
    # installation_adder = models.CharField(max_length=255,blank=True,null=True)
    # sales_team = models.CharField(max_length=255,blank=True,null=True)
    # parent_company = models.CharField(max_length=255,blank=True,null=True)
    # share_link = models.CharField(max_length=255,blank=True,null=True)
    # enrolled_status = models.BooleanField(default=False)
    # enrolled_date = models.DateTimeField(auto_now_add=False,blank=True,null=True)
    # cancelled_date = models.DateTimeField(auto_now_add=False,blank=True,null=True)
    # projected_flow_date = models.DateTimeField(auto_now_add=False,blank=True,null=True)
    # REP_customer_account_number = models.CharField(max_length=255,blank=True,null=True)
    # shipped_status = models.CharField(max_length=255,blank=True,null=True)
    # ship_date = models.DateTimeField(auto_now_add=False,blank=True,null=True)
    # installation_status = models.CharField(max_length=255,blank=True,null=True)
    # installation_date = models.DateTimeField(auto_now_add=False,blank=True,null=True)
    # installation_company = models.CharField(max_length=255,blank=True,null=True)
    # cancellation_date = models.DateTimeField(auto_now_add=False,blank=True,null=True)
    # notes = models.ManyToManyField('SaleNote',blank=True)
    # total_led_cost = models.CharField(max_length=255,blank=True,null=True)
    # total_led_price = models.CharField(max_length=255,blank=True,null=True)
    # REP_profit = models.CharField(max_length=255,blank=True,null=True)
    # total_green_bonus = models.CharField(max_length=254,blank=True,null=True)
    # brand = models.CharField(max_length=254,blank=True,null=True)
    # docusign_status = models.CharField(max_length=254,blank=True,null=True)
    # sale_type = models.CharField(max_length=254,blank=True,null=True)
    # cancelled = models.BooleanField(default=False)
    # renewal = models.BooleanField(default=False)
    # tracking_number = models.CharField(max_length=254,blank=True,null=True)
    # shipping_method = models.CharField(max_length=254,blank=True,null=True) 
    # bill_of_ladings = models.ManyToManyField('ImageUpload',blank=True) 
    # service_start_date = models.DateTimeField(auto_now_add=False,blank=True,null=True)
    # broker_margin = models.CharField(max_length=254,blank=True,null=True)
    # rep_margin = models.CharField(max_length=254,blank=True,null=True)
    # ledplus_adder = models.CharField(max_length=254,blank=True,null=True)
    # energy_only_sale = models.BooleanField(default=False)

    def __str__(self):
        return self.id
